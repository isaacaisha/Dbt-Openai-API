name: Build and Deploy Code

on: [push, pull_request]

jobs:
  build:
    environment:
      name: openai-dbt-api
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      ADMIN_DATABASE_URL: ${{ secrets.ADMIN_DATABASE_URL }}
      ADMIN_HOST: ${{ secrets.ADMIN_HOST }}
      ADMIN_PORT: ${{ secrets.ADMIN_PORT }}
      ADMIN_DATABASE: ${{ secrets.ADMIN_DATABASE }}
      ADMIN_USER: ${{ secrets.ADMIN_USER }}
      ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
      ADMIN_ALGORITHM: ${{ secrets.ADMIN_ALGORITHM }}
      ADMIN_ACCESS_TOKEN_EXPIRE_MINUTES: ${{ secrets.ADMIN_ACCESS_TOKEN_EXPIRE_MINUTES }}
      ADMIN_OAUTH2_SECRET_KEY: ${{ secrets.ADMIN_OAUTH2_SECRET_KEY }}

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
          POSTGRES_DB: ${{ secrets.ADMIN_DATABASE }}_test
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.12.0"

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run tests with pytest
        run: |
          pip install pytest
          pytest 
            
      # - name: Login to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKER_HUB_USERNAME }}
      #     password: ${{ secrets.DOCKER_HUB_TOKEN }}
      # 
      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v3
      # 
      # - name: Build and push
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: ./
      #     file: ./Dockerfile
      #     builder: ${{ steps.buildx.outputs.name }}
      #     push: true
      #     tags: ${{ secrets.DOCKER_HUB_USERNAME }}/siisi:latest
      #     cache-from: type=local,src=/tmp/.buildx-cache
      #     cache-to: type=local,dest=/tmp/.buildx.cache
# 
      # - name: Image digest
      #   run: echo ${{ steps.docker_build.outputs.digest }}

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    environment:
      name: openai-dbt-api

    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
        
      - name: deploying to Heroku
        uses: akhileshns/heroku-deploy@v3.13.15 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{secrets.HEROKU_APP_NAME}} #Must be unique in Heroku
          heroku_email: ${{secrets.HEROKU_EMAIL}}

      
      - name: deploying to Ubuntu server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USERNAME }}
          password: ${{ secrets.PROD_PASSWORD }}
          script: |
            cd app/src
            git pull
            echo ${{ secrets.PROD_PASSWORD }} | sudo -S systemctl restart api
    